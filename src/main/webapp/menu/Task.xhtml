<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.org/ui" xmlns:b="http://bootsfaces.net/ui">

<h:body>

	<ui:composition template="/template/common/commonLayout.xhtml">

		<ui:define name="content">
			<h:panelGroup layout="block"
				rendered="#{taskController.valid and  not facesContext.validationFailed}">
				<ul>
					<ui:repeat value="#{facesContext.messageList}" var="facesMessage">
						<li
							style="list-style: none; background-color: #32CD32; color: white; margin-left: -4.9%"
							class="alert alert-success"><h:outputText
								value="#{facesMessage.summary}" escape="false" /></li>
					</ui:repeat>
				</ul>
			</h:panelGroup>
			<h:form>
				<p:outputPanel id="table1" autoUpdate="true"
					rendered="#{taskController.rendered}">
					<h1>#{msg['manage.task.form']}</h1>
					<div class="col-md-4 col-sm-6">
						<div class="circle-tile2 ">

							<div class="circle-tile-heading2 green2 ">
								<h1 style="color: white;">#{taskController.listSize}</h1>
							</div>

							<div class="circle-tile-content2 green2 ">
								<div class="circle-tile-description text-faded2">
									<label
										style="font-family: Open Sans sans-serif !important; font-size: 28px !important; color: white;">
										#{msg['registered.task.form']}</label>
								</div>
								<div class="circle-tile-number2 text-faded2">
									<span class="glyphicon glyphicon-tasks"></span> <span
										id="sparklineB"></span> <label
										style="color: white; font-family: Open Sans sans-serif !important; font-size: 15px !important;">
										&nbsp;#{msg['task.form.message']}</label>
								</div>
								<h:commandLink styleClass="circle-tile-footer"
									actionListener="#{taskController.showTasks()}"
									value="More Info">
									<i class="glyphicon glyphicon-chevron-right"></i>
									<f:ajax render="@form" execute="@form" onevent="showProgress" />
								</h:commandLink>
							</div>
						</div>

					</div>
					<div class="col-md-4 col-sm-6">
						<div class="circle-tile2">

							<div class="circle-tile-heading2 blue2 text-white">
								<h1 style="color: white;">#{taskController.assignmentSize}</h1>
							</div>

							<div class="circle-tile-content2 blue2">
								<div class="circle-tile-description text-faded2">
									<label
										style="font-family: Open Sans sans-serif !important; font-size: 28px !important; color: white;">
										#{msg['assign.task.form']}</label>
								</div>
								<div class="circle-tile-number2 text-faded2">
									<span class="glyphicon glyphicon-user"></span> <span
										id="sparklineB"></span><label
										style="color: white; font-family: Open Sans sans-serif !important; font-size: 15px !important;">
										&nbsp; #{msg['assignment.form.message']}</label>

								</div>
								<h:commandLink styleClass="circle-tile-footer"
									actionListener="#{taskController.showAssignments()}"
									value="More Info">
									<i class="glyphicon glyphicon-chevron-right"></i>
									<f:ajax render="@form" execute="@form" onevent="showProgress" />
								</h:commandLink>

							</div>
						</div>

					</div>
				</p:outputPanel>
				<p:outputPanel id="table"
					rendered="#{taskController.renderTable}">
					<h1>#{msg['form.task.table']}</h1>
					<div class="nav">
						<div class="div-action pull pull-left"
							style="padding-bottom: 20px;">
							<h:commandLink class="btn btn-primary"
								action="#{taskController.newTask()}">
								<i class="glyphicon glyphicon-plus-sign"></i>#{msg['form.task.new']}
					</h:commandLink>
						</div>
						<div class="div-action pull pull-right"
							style="padding-bottom: 20px;">
							<h:commandLink
								class="btn btn-primary glyphicon glyphicon-chevron-left"
								actionListener="#{taskController.back()}"
								value="#{msg['UserRegForm.BackButton']}">
								<f:ajax render="@form" execute="@form" onevent="showProgress" />
							</h:commandLink>
						</div>
					</div>
					
					<p:dataTable value="#{taskController.taskDtoDetails}"
						var="act" rowIndexVar="row" sortBy="#{act.taskId}"  widgetVar="Task"
									multiViewState="true" rows="10" paginator="true"
									paginatorTemplate="{CurrentPageReport} {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {RowsPerPageDropdown}"
									rowsPerPageTemplate="5,10,15"
									emptyMessage="No task found" sortOrder="ASCENDING"
						rowKey="#{act.taskId}"><p:autoUpdate /> 
						<p:column headerText="#{msg['form.task.name']}"
							sortBy="#{act.taskName}">

							<h:inputText id="tasknameId" binding="#{surnameId}"
								value="#{act.taskName}" styleClass="form-control" size="10"
								rendered="#{act.editable}" maxlength="80" required="true"
								validatorMessage="#{msg['error.enter.invalid.surname']}"
								converterMessage="#{msg['error.enter.invalid.surname']}"
								requiredMessage="#{msg['tname.required.message']}">
								<f:validateRegex pattern="#{regex['regex.string.Validation']}" />
								<f:validateLength maximum="35" />
							</h:inputText>
							<h:message for="tasknameId" styleClass="help-block"></h:message>

							<h:outputText value="#{act.taskName}"
								rendered="#{not act.editable}" />
						</p:column>


						<p:column headerText="#{msg['form.task.description']}"
							sortBy="#{act.description}">

							<h:inputTextarea id="descriptionId" value="#{act.description}"
								styleClass="form-control" size="10" rendered="#{act.editable}"
								maxlength="1500" required="true"
								requiredMessage="#{msg['description.required.message']}"
								validatorMessage="#{msg['error.maxlength.form']}">
								<f:validateLength maximum="1000" />
							</h:inputTextarea>
							<h:message for="descriptionId" styleClass="help-block"></h:message>

							<h:outputText value="#{act.description}"
								rendered="#{not act.editable}" />
						</p:column>


						<p:column headerText="#{msg['form.task.startDate']}"
							sortBy="#{act.startDate}">
							<h:inputText locale="#{facesContext.viewRoot.locale}"
								autocomplete="off" id="from_start_date_id"
								binding="#{from_dob_date_id}" class="form-control" escape="true"
								value="#{act.startDate}" maxlength="35" required="true"
								rendered="#{act.editable}"
								converterMessage="#{msg['validation.message.DATE_FORMAT']}"
								requiredMessage="#{msg['startDate.required.message']}">
								
								<f:convertDateTime type="date" dateType="short"
									pattern="dd/MM/yyyy" />
								<f:validateLength maximum="35" />
							</h:inputText>
							<script>
								$(function() {
									$('input[id*="from_start_date_id"]')
											.datepicker(
													{
														changeMonth : true,
														changeYear : true,
														//maxDate: 0,
														minDate : 0,
														dateFormat : "dd/mm/yy",
														yearRange : "-100:+0",
														buttonImage : "/resources/image/calendar1.png"
													});
								});
							</script>
							<h:message for="from_start_date_id" styleClass="help-block"></h:message>
							<h:outputText value="#{act.startDate}"
								rendered="#{not act.editable}" />
						</p:column>

						<p:column headerText="#{msg['form.task.dueDate']}"
							sortBy="#{act.dueDate}">
							<h:inputText locale="#{facesContext.viewRoot.locale}"
								autocomplete="off" id="from_due_date_id"
								binding="#{from_due_date_id}" class="form-control" escape="true"
								value="#{act.dueDate}" maxlength="35" required="true"
								rendered="#{act.editable}"
								converterMessage="#{msg['validation.message.DATE_FORMAT']}"
								requiredMessage="#{msg['dueDate.required.message']}">
								<f:convertDateTime type="date" dateType="short"
									pattern="dd/MM/yyyy" />
								<f:validateLength maximum="35" />
							</h:inputText>
							<script>
								$(function() {
									$('input[id*="from_due_date_id"]')
											.datepicker(
													{
														changeMonth : true,
														changeYear : true,
														//maxDate: 0,
														minDate : 0,
														dateFormat : "dd/mm/yy",
														yearRange : "-100:+0",
														buttonImage : "/resources/image/calendar1.png"
													});
								});
							</script>
							<h:message for="from_due_date_id" styleClass="help-block"></h:message>

							<h:outputText value="#{act.dueDate}"
								rendered="#{not act.editable}" />

						</p:column>

						<p:column headerText="#{msg['form.target.weight']}"
							sortBy="#{act.weight}">
									<h:selectOneMenu id="weightId" styleClass="form-control"
											required="true" value="#{taskController.task.taskWeight}"
											requiredMessage="#{msg['weight.required.message']}"
								rendered="#{act.editable}">
											<f:selectItem
												itemLabel="#{msg['common.message.select.PLACEHOLDER']}"
												itemValue="#{null}" escapeItem="true" />
											<f:selectItems value="#{activityController.weight}"
												var="option" itemValue="#{option}" itemLabelEscaped="true" />
											<f:ajax event="change" execute="@this"
												listener="#{activityController.changeSelectBox('Junior')}"
												render="ReasonPanel" />
										</h:selectOneMenu>

									<h:message for="weightId" styleClass="help-block"></h:message>
							<h:outputText value="#{act.weight}"
								rendered="#{not act.editable}" />
						</p:column>

						<p:column headerText="#{msg['message.StrategicPlan.registered']}"
							sortBy="#{act.strategicPlan.details}">

							<h:outputText value="#{act.strategicPlan.details}"/>
						</p:column>

						<p:column headerText="Action">

							<h:commandLink style="color:white"
								class="btn btn-success 	glyphicon glyphicon-edit"
								value="#{msg['UserCategoryView.editButton']}"
								action="#{taskController.editAction(act)}"
								rendered="#{not act.editable}" />
							<h:commandLink style="margin-left:2px;color:white"
								class="btn btn-danger 	glyphicon glyphicon-remove"
								value="#{msg['UserCategoryView.cancelButton']}"
								action="#{taskController.cancel(act)}"
								rendered="#{act.editable}" />
							<h:commandButton value="Save Changes" class="btn btn-primary"
								action="#{taskController.saveAction(act)}"
								rendered="#{act.editable}" />
						</p:column>

					</p:dataTable>
				</p:outputPanel>


				<p:outputPanel id="table2"
					rendered="#{taskController.renderTaskForm}">
					<h1>#{msg['assign.task.form']}s</h1>
					<div class="nav">
						<div class="div-action pull pull-left"
							style="padding-bottom: 20px;">
							<h:commandLink class="btn btn-primary"
								action="#{taskController.newAssign()}">
								<i class="glyphicon glyphicon-plus-sign"></i>#{msg['form.assign.new']}
					</h:commandLink>
						</div>
						<div class="div-action pull pull-right"
							style="padding-bottom: 20px;">
							<h:commandLink
								class="btn btn-primary glyphicon glyphicon-chevron-left"
								actionListener="#{taskController.back()}"
								value="#{msg['UserRegForm.BackButton']}">
								<f:ajax render="@form" execute="@form" onevent="showProgress" />
							</h:commandLink>
						</div>
					</div>
					<p:dataTable value="#{taskController.taskAssignDetails}"
						style="width:100%; margin-top:10px;;font-family: Open Sans sans-serif !important; font-size: 14px !important;"
						var="act" rowIndexVar="row" sortBy="#{act.taskAssignmentId}"
						rows="5" paginator="true"
						paginatorTemplate="{CurrentPageReport} {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {RowsPerPageDropdown}"
						rowsPerPageTemplate="5,10,15" sortOrder="ASCENDING"
						rowKey="#{act.taskAssignmentId}">
						<p:autoUpdate /> 
						<p:column headerText="#{msg['form.task.name']}"
							sortBy="#{act.taskName}">

							<h:outputText value="#{act.task.taskName}" />
						</p:column>


						<p:column headerText="#{msg['message.liststaff.board']}"
							sortBy="#{act.user.fname}">
							<h:outputText value="#{act.user.fname} #{act.user.lname}" />
						</p:column>


						<p:column headerText="#{msg['institutionForm.startDate']}"
							sortBy="#{act.crtdDtTime}">
							<h:outputText value="#{act.crtdDtTime}" />

						</p:column>

					</p:dataTable>
				</p:outputPanel>
			</h:form>

		</ui:define>
	</ui:composition>
</h:body>

</html>
